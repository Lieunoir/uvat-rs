searchState.loadedDescShard("uvat_rs", 0, "Partial reimplementation in Rust of the paper “Joint …\nUVAT solver. Simultaneously optimize distorsion and cuts …\nUser values for the UVAT solvers\nDiffusion coefficient at the end of the optimization\nDiffusion coefficient at the start of the optimization\nNumber of UV-then-AT steps ran for a fixed value of epsilon\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCoefficient penalizing seam length over distorsion (lower …\nStabilization term for v\nInitializes the solver and precompute what can be …\nSingle step of UV and then AT optimization. Returns wether …\nOptimize UV and AT.\nUpper bound of steps used to optimize UV\nIndex trait encompassing operations from <code>faer</code>’s Index …\nApply constraints on matrix <code>l</code> and right hand side column …\nSame as <code>apply_constraints</code> but with a matrix for rhs and …\nBuild an edge map from faces <code>f</code> and total the number of …\nCompute lengths, faces and edge map from the intrinsic …\nBuild mass and stiffness matrices for the intrinsic …\nCompute Tutte parameterization with border <code>b</code> mapped to a …\nMove the vertices from <code>src</code> by at most <code>delta_dst</code> while …\nFind all ordered boundary loops from face indices <code>f</code> and …\nReturns wether the triangle pair with shaired edge <code>l_s</code>, …\nCompute <code>len</code> evenly space points on a circle\nAdd length to all edge lengths if the triangle inequality …")